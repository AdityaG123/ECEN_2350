|toplab3
ADC_CLK_10 => ADC_CLK_10.IN2
KEY[0] => KEY[0].IN1
KEY[1] => finalKEY[1].DATAB
SW[0] => finalSW[0].DATAB
SW[1] => finalSW[1].DATAB
SW[2] => ~NO_FANOUT~
SW[3] => ~NO_FANOUT~
SW[4] => ~NO_FANOUT~
SW[5] => ~NO_FANOUT~
SW[6] => ~NO_FANOUT~
SW[7] => ~NO_FANOUT~
SW[8] => ~NO_FANOUT~
SW[9] => finalKEY[1].OUTPUTSELECT
SW[9] => finalSW[0].OUTPUTSELECT
SW[9] => finalSW[1].OUTPUTSELECT
LEDR[0] << toplab3_man:U3.LEDR
LEDR[1] << toplab3_man:U3.LEDR
LEDR[2] << toplab3_man:U3.LEDR
LEDR[3] << toplab3_man:U3.LEDR
LEDR[4] << toplab3_man:U3.LEDR
LEDR[5] << toplab3_man:U3.LEDR
LEDR[6] << toplab3_man:U3.LEDR
LEDR[7] << toplab3_man:U3.LEDR
LEDR[8] << toplab3_man:U3.LEDR
LEDR[9] << toplab3_man:U3.LEDR
HEX0[0] << toplab3_man:U3.HEX0
HEX0[1] << toplab3_man:U3.HEX0
HEX0[2] << toplab3_man:U3.HEX0
HEX0[3] << toplab3_man:U3.HEX0
HEX0[4] << toplab3_man:U3.HEX0
HEX0[5] << toplab3_man:U3.HEX0
HEX0[6] << toplab3_man:U3.HEX0
HEX0[7] << toplab3_man:U3.HEX0
HEX1[0] << toplab3_man:U3.HEX1
HEX1[1] << toplab3_man:U3.HEX1
HEX1[2] << toplab3_man:U3.HEX1
HEX1[3] << toplab3_man:U3.HEX1
HEX1[4] << toplab3_man:U3.HEX1
HEX1[5] << toplab3_man:U3.HEX1
HEX1[6] << toplab3_man:U3.HEX1
HEX1[7] << toplab3_man:U3.HEX1
HEX2[0] << toplab3_man:U3.HEX2
HEX2[1] << toplab3_man:U3.HEX2
HEX2[2] << toplab3_man:U3.HEX2
HEX2[3] << toplab3_man:U3.HEX2
HEX2[4] << toplab3_man:U3.HEX2
HEX2[5] << toplab3_man:U3.HEX2
HEX2[6] << toplab3_man:U3.HEX2
HEX2[7] << toplab3_man:U3.HEX2
HEX3[0] << toplab3_man:U3.HEX3
HEX3[1] << toplab3_man:U3.HEX3
HEX3[2] << toplab3_man:U3.HEX3
HEX3[3] << toplab3_man:U3.HEX3
HEX3[4] << toplab3_man:U3.HEX3
HEX3[5] << toplab3_man:U3.HEX3
HEX3[6] << toplab3_man:U3.HEX3
HEX3[7] << toplab3_man:U3.HEX3
HEX4[0] << toplab3_man:U3.HEX4
HEX4[1] << toplab3_man:U3.HEX4
HEX4[2] << toplab3_man:U3.HEX4
HEX4[3] << toplab3_man:U3.HEX4
HEX4[4] << toplab3_man:U3.HEX4
HEX4[5] << toplab3_man:U3.HEX4
HEX4[6] << toplab3_man:U3.HEX4
HEX4[7] << toplab3_man:U3.HEX4
HEX5[0] << toplab3_man:U3.HEX5
HEX5[1] << toplab3_man:U3.HEX5
HEX5[2] << toplab3_man:U3.HEX5
HEX5[3] << toplab3_man:U3.HEX5
HEX5[4] << toplab3_man:U3.HEX5
HEX5[5] << toplab3_man:U3.HEX5
HEX5[6] << toplab3_man:U3.HEX5
HEX5[7] << toplab3_man:U3.HEX5


|toplab3|create_clock2:U0
reset => LED~reg0.ACLR
reset => clock_out~reg0.ACLR
reset => divide_counter[0].ACLR
reset => divide_counter[1].ACLR
reset => divide_counter[2].ACLR
reset => divide_counter[3].ACLR
reset => divide_counter[4].ACLR
reset => divide_counter[5].ACLR
reset => divide_counter[6].ACLR
reset => divide_counter[7].ACLR
reset => divide_counter[8].ACLR
reset => divide_counter[9].ACLR
reset => divide_counter[10].ACLR
reset => divide_counter[11].ACLR
reset => divide_counter[12].ACLR
reset => divide_counter[13].ACLR
reset => divide_counter[14].ACLR
reset => divide_counter[15].ACLR
reset => divide_counter[16].ACLR
reset => divide_counter[17].ACLR
reset => divide_counter[18].ACLR
reset => divide_counter[19].ACLR
reset => divide_counter[20].ACLR
reset => divide_counter[21].ACLR
reset => divide_counter[22].ACLR
reset => divide_counter[23].ACLR
reset => divide_counter[24].ACLR
reset => divide_counter[25].ACLR
reset => divide_counter[26].ACLR
reset => divide_counter[27].ACLR
reset => divide_counter[28].ACLR
reset => divide_counter[29].ACLR
reset => divide_counter[30].ACLR
reset => divide_counter[31].ACLR
clock_in => LED~reg0.CLK
clock_in => clock_out~reg0.CLK
clock_in => divide_counter[0].CLK
clock_in => divide_counter[1].CLK
clock_in => divide_counter[2].CLK
clock_in => divide_counter[3].CLK
clock_in => divide_counter[4].CLK
clock_in => divide_counter[5].CLK
clock_in => divide_counter[6].CLK
clock_in => divide_counter[7].CLK
clock_in => divide_counter[8].CLK
clock_in => divide_counter[9].CLK
clock_in => divide_counter[10].CLK
clock_in => divide_counter[11].CLK
clock_in => divide_counter[12].CLK
clock_in => divide_counter[13].CLK
clock_in => divide_counter[14].CLK
clock_in => divide_counter[15].CLK
clock_in => divide_counter[16].CLK
clock_in => divide_counter[17].CLK
clock_in => divide_counter[18].CLK
clock_in => divide_counter[19].CLK
clock_in => divide_counter[20].CLK
clock_in => divide_counter[21].CLK
clock_in => divide_counter[22].CLK
clock_in => divide_counter[23].CLK
clock_in => divide_counter[24].CLK
clock_in => divide_counter[25].CLK
clock_in => divide_counter[26].CLK
clock_in => divide_counter[27].CLK
clock_in => divide_counter[28].CLK
clock_in => divide_counter[29].CLK
clock_in => divide_counter[30].CLK
clock_in => divide_counter[31].CLK
LED <= LED~reg0.DB_MAX_OUTPUT_PORT_TYPE
clock_out <= clock_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|toplab3|mem:U1
address[0] => address[0].IN1
address[1] => address[1].IN1
address[2] => address[2].IN1
address[3] => address[3].IN1
address[4] => address[4].IN1
clock => clock.IN1
q[0] <= altsyncram:altsyncram_component.q_a
q[1] <= altsyncram:altsyncram_component.q_a
q[2] <= altsyncram:altsyncram_component.q_a
q[3] <= altsyncram:altsyncram_component.q_a


|toplab3|mem:U1|altsyncram:altsyncram_component
wren_a => ~NO_FANOUT~
rden_a => ~NO_FANOUT~
wren_b => ~NO_FANOUT~
rden_b => ~NO_FANOUT~
data_a[0] => ~NO_FANOUT~
data_a[1] => ~NO_FANOUT~
data_a[2] => ~NO_FANOUT~
data_a[3] => ~NO_FANOUT~
data_b[0] => ~NO_FANOUT~
address_a[0] => altsyncram_q781:auto_generated.address_a[0]
address_a[1] => altsyncram_q781:auto_generated.address_a[1]
address_a[2] => altsyncram_q781:auto_generated.address_a[2]
address_a[3] => altsyncram_q781:auto_generated.address_a[3]
address_a[4] => altsyncram_q781:auto_generated.address_a[4]
address_b[0] => ~NO_FANOUT~
addressstall_a => ~NO_FANOUT~
addressstall_b => ~NO_FANOUT~
clock0 => altsyncram_q781:auto_generated.clock0
clock1 => ~NO_FANOUT~
clocken0 => ~NO_FANOUT~
clocken1 => ~NO_FANOUT~
clocken2 => ~NO_FANOUT~
clocken3 => ~NO_FANOUT~
aclr0 => ~NO_FANOUT~
aclr1 => ~NO_FANOUT~
byteena_a[0] => ~NO_FANOUT~
byteena_b[0] => ~NO_FANOUT~
q_a[0] <= altsyncram_q781:auto_generated.q_a[0]
q_a[1] <= altsyncram_q781:auto_generated.q_a[1]
q_a[2] <= altsyncram_q781:auto_generated.q_a[2]
q_a[3] <= altsyncram_q781:auto_generated.q_a[3]
q_b[0] <= <GND>
eccstatus[0] <= <GND>
eccstatus[1] <= <GND>
eccstatus[2] <= <GND>


|toplab3|mem:U1|altsyncram:altsyncram_component|altsyncram_q781:auto_generated
address_a[0] => ram_block1a0.PORTAADDR
address_a[0] => ram_block1a1.PORTAADDR
address_a[0] => ram_block1a2.PORTAADDR
address_a[0] => ram_block1a3.PORTAADDR
address_a[1] => ram_block1a0.PORTAADDR1
address_a[1] => ram_block1a1.PORTAADDR1
address_a[1] => ram_block1a2.PORTAADDR1
address_a[1] => ram_block1a3.PORTAADDR1
address_a[2] => ram_block1a0.PORTAADDR2
address_a[2] => ram_block1a1.PORTAADDR2
address_a[2] => ram_block1a2.PORTAADDR2
address_a[2] => ram_block1a3.PORTAADDR2
address_a[3] => ram_block1a0.PORTAADDR3
address_a[3] => ram_block1a1.PORTAADDR3
address_a[3] => ram_block1a2.PORTAADDR3
address_a[3] => ram_block1a3.PORTAADDR3
address_a[4] => ram_block1a0.PORTAADDR4
address_a[4] => ram_block1a1.PORTAADDR4
address_a[4] => ram_block1a2.PORTAADDR4
address_a[4] => ram_block1a3.PORTAADDR4
clock0 => ram_block1a0.CLK0
clock0 => ram_block1a1.CLK0
clock0 => ram_block1a2.CLK0
clock0 => ram_block1a3.CLK0
q_a[0] <= ram_block1a0.PORTADATAOUT
q_a[1] <= ram_block1a1.PORTADATAOUT
q_a[2] <= ram_block1a2.PORTADATAOUT
q_a[3] <= ram_block1a3.PORTADATAOUT


|toplab3|toplab3_man:U3
ADC_CLK_10 => ADC_CLK_10.IN1
KEY[0] => KEY[0].IN3
KEY[1] => KEY[1].IN1
SW[0] => SW[0].IN1
SW[1] => SW[1].IN1
LEDR[0] <= current[0].DB_MAX_OUTPUT_PORT_TYPE
LEDR[1] <= current[1].DB_MAX_OUTPUT_PORT_TYPE
LEDR[2] <= current[2].DB_MAX_OUTPUT_PORT_TYPE
LEDR[3] <= current[3].DB_MAX_OUTPUT_PORT_TYPE
LEDR[4] <= current[4].DB_MAX_OUTPUT_PORT_TYPE
LEDR[5] <= current[5].DB_MAX_OUTPUT_PORT_TYPE
LEDR[6] <= current[6].DB_MAX_OUTPUT_PORT_TYPE
LEDR[7] <= current[7].DB_MAX_OUTPUT_PORT_TYPE
LEDR[8] <= current[8].DB_MAX_OUTPUT_PORT_TYPE
LEDR[9] <= current[9].DB_MAX_OUTPUT_PORT_TYPE
HEX0[0] <= print7seg:U2.HEX
HEX0[1] <= print7seg:U2.HEX
HEX0[2] <= print7seg:U2.HEX
HEX0[3] <= print7seg:U2.HEX
HEX0[4] <= print7seg:U2.HEX
HEX0[5] <= print7seg:U2.HEX
HEX0[6] <= print7seg:U2.HEX
HEX0[7] <= print7seg:U2.HEX
HEX1[0] <= print7seg:U9.HEX
HEX1[1] <= print7seg:U9.HEX
HEX1[2] <= print7seg:U9.HEX
HEX1[3] <= print7seg:U9.HEX
HEX1[4] <= print7seg:U9.HEX
HEX1[5] <= print7seg:U9.HEX
HEX1[6] <= print7seg:U9.HEX
HEX1[7] <= print7seg:U9.HEX
HEX2[0] <= print7seg:U5.HEX
HEX2[1] <= print7seg:U5.HEX
HEX2[2] <= print7seg:U5.HEX
HEX2[3] <= print7seg:U5.HEX
HEX2[4] <= print7seg:U5.HEX
HEX2[5] <= print7seg:U5.HEX
HEX2[6] <= print7seg:U5.HEX
HEX2[7] <= print7seg:U5.HEX
HEX3[0] <= print7seg:U6.HEX
HEX3[1] <= print7seg:U6.HEX
HEX3[2] <= print7seg:U6.HEX
HEX3[3] <= print7seg:U6.HEX
HEX3[4] <= print7seg:U6.HEX
HEX3[5] <= print7seg:U6.HEX
HEX3[6] <= print7seg:U6.HEX
HEX3[7] <= print7seg:U6.HEX
HEX4[0] <= print7seg:U7.HEX
HEX4[1] <= print7seg:U7.HEX
HEX4[2] <= print7seg:U7.HEX
HEX4[3] <= print7seg:U7.HEX
HEX4[4] <= print7seg:U7.HEX
HEX4[5] <= print7seg:U7.HEX
HEX4[6] <= print7seg:U7.HEX
HEX4[7] <= print7seg:U7.HEX
HEX5[0] <= print7seg:U8.HEX
HEX5[1] <= print7seg:U8.HEX
HEX5[2] <= print7seg:U8.HEX
HEX5[3] <= print7seg:U8.HEX
HEX5[4] <= print7seg:U8.HEX
HEX5[5] <= print7seg:U8.HEX
HEX5[6] <= print7seg:U8.HEX
HEX5[7] <= print7seg:U8.HEX


|toplab3|toplab3_man:U3|create_clock2:U0
reset => LED~reg0.ACLR
reset => clock_out~reg0.ACLR
reset => divide_counter[0].ACLR
reset => divide_counter[1].ACLR
reset => divide_counter[2].ACLR
reset => divide_counter[3].ACLR
reset => divide_counter[4].ACLR
reset => divide_counter[5].ACLR
reset => divide_counter[6].ACLR
reset => divide_counter[7].ACLR
reset => divide_counter[8].ACLR
reset => divide_counter[9].ACLR
reset => divide_counter[10].ACLR
reset => divide_counter[11].ACLR
reset => divide_counter[12].ACLR
reset => divide_counter[13].ACLR
reset => divide_counter[14].ACLR
reset => divide_counter[15].ACLR
reset => divide_counter[16].ACLR
reset => divide_counter[17].ACLR
reset => divide_counter[18].ACLR
reset => divide_counter[19].ACLR
reset => divide_counter[20].ACLR
reset => divide_counter[21].ACLR
reset => divide_counter[22].ACLR
reset => divide_counter[23].ACLR
reset => divide_counter[24].ACLR
reset => divide_counter[25].ACLR
reset => divide_counter[26].ACLR
reset => divide_counter[27].ACLR
reset => divide_counter[28].ACLR
reset => divide_counter[29].ACLR
reset => divide_counter[30].ACLR
reset => divide_counter[31].ACLR
clock_in => LED~reg0.CLK
clock_in => clock_out~reg0.CLK
clock_in => divide_counter[0].CLK
clock_in => divide_counter[1].CLK
clock_in => divide_counter[2].CLK
clock_in => divide_counter[3].CLK
clock_in => divide_counter[4].CLK
clock_in => divide_counter[5].CLK
clock_in => divide_counter[6].CLK
clock_in => divide_counter[7].CLK
clock_in => divide_counter[8].CLK
clock_in => divide_counter[9].CLK
clock_in => divide_counter[10].CLK
clock_in => divide_counter[11].CLK
clock_in => divide_counter[12].CLK
clock_in => divide_counter[13].CLK
clock_in => divide_counter[14].CLK
clock_in => divide_counter[15].CLK
clock_in => divide_counter[16].CLK
clock_in => divide_counter[17].CLK
clock_in => divide_counter[18].CLK
clock_in => divide_counter[19].CLK
clock_in => divide_counter[20].CLK
clock_in => divide_counter[21].CLK
clock_in => divide_counter[22].CLK
clock_in => divide_counter[23].CLK
clock_in => divide_counter[24].CLK
clock_in => divide_counter[25].CLK
clock_in => divide_counter[26].CLK
clock_in => divide_counter[27].CLK
clock_in => divide_counter[28].CLK
clock_in => divide_counter[29].CLK
clock_in => divide_counter[30].CLK
clock_in => divide_counter[31].CLK
LED <= LED~reg0.DB_MAX_OUTPUT_PORT_TYPE
clock_out <= clock_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|toplab3|toplab3_man:U3|Mode:U1
SW[0] => Decoder0.IN1
SW[0] => Decoder1.IN1
SW[1] => Decoder0.IN0
SW[1] => Decoder1.IN0
KEY[0] => Decoder0.IN2
KEY[0] => Decoder1.IN3
KEY[1] => Decoder1.IN2
MODE[0] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
MODE[1] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
MODE[2] <= <GND>
MODE[3] <= <GND>


|toplab3|toplab3_man:U3|print7seg:U2
num[0] => Decoder0.IN3
num[1] => Decoder0.IN2
num[2] => Decoder0.IN1
num[3] => Decoder0.IN0
HEX[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
HEX[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
HEX[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
HEX[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
HEX[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
HEX[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
HEX[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
HEX[7] <= <VCC>


|toplab3|toplab3_man:U3|NextState:U3
mode[0] => Equal0.IN0
mode[0] => Equal2.IN3
mode[0] => Equal6.IN1
mode[1] => Equal0.IN3
mode[1] => Equal2.IN0
mode[1] => Equal6.IN0
mode[2] => Equal0.IN2
mode[2] => Equal2.IN2
mode[2] => Equal6.IN3
mode[3] => Equal0.IN1
mode[3] => Equal2.IN1
mode[3] => Equal6.IN2
current[0] => Equal3.IN19
current[0] => Equal4.IN19
current[0] => Equal5.IN19
current[0] => Equal7.IN19
current[0] => Equal8.IN19
current[0] => Equal9.IN19
current[0] => Equal1.IN5
current[1] => Equal3.IN18
current[1] => Equal4.IN18
current[1] => Equal5.IN18
current[1] => Equal7.IN18
current[1] => Equal8.IN18
current[1] => Equal9.IN18
current[1] => Equal1.IN4
current[2] => Equal3.IN17
current[2] => Equal4.IN17
current[2] => Equal5.IN17
current[2] => Equal7.IN17
current[2] => Equal8.IN17
current[2] => Equal9.IN17
current[2] => Equal1.IN3
current[3] => Equal3.IN16
current[3] => Equal4.IN16
current[3] => Equal5.IN16
current[3] => Equal7.IN16
current[3] => Equal8.IN16
current[3] => Equal9.IN16
current[3] => Equal1.IN9
current[4] => Equal3.IN15
current[4] => Equal4.IN15
current[4] => Equal5.IN15
current[4] => Equal7.IN15
current[4] => Equal8.IN15
current[4] => Equal9.IN15
current[4] => Equal1.IN8
current[5] => Equal3.IN14
current[5] => Equal4.IN14
current[5] => Equal5.IN14
current[5] => Equal7.IN14
current[5] => Equal8.IN14
current[5] => Equal9.IN14
current[5] => Equal1.IN7
current[6] => Equal3.IN13
current[6] => Equal4.IN13
current[6] => Equal5.IN13
current[6] => Equal7.IN13
current[6] => Equal8.IN13
current[6] => Equal9.IN13
current[6] => Equal1.IN6
current[7] => Equal3.IN12
current[7] => Equal4.IN12
current[7] => Equal5.IN12
current[7] => Equal7.IN12
current[7] => Equal8.IN12
current[7] => Equal9.IN12
current[7] => Equal1.IN2
current[8] => Equal3.IN11
current[8] => Equal4.IN11
current[8] => Equal5.IN11
current[8] => Equal7.IN11
current[8] => Equal8.IN11
current[8] => Equal9.IN11
current[8] => Equal1.IN1
current[9] => Equal3.IN10
current[9] => Equal4.IN10
current[9] => Equal5.IN10
current[9] => Equal7.IN10
current[9] => Equal8.IN10
current[9] => Equal9.IN10
current[9] => Equal1.IN0
next[0] <= next[0].DB_MAX_OUTPUT_PORT_TYPE
next[1] <= next[1].DB_MAX_OUTPUT_PORT_TYPE
next[2] <= next[2].DB_MAX_OUTPUT_PORT_TYPE
next[3] <= <GND>
next[4] <= <GND>
next[5] <= <GND>
next[6] <= <GND>
next[7] <= next[7].DB_MAX_OUTPUT_PORT_TYPE
next[8] <= next[8].DB_MAX_OUTPUT_PORT_TYPE
next[9] <= next[9].DB_MAX_OUTPUT_PORT_TYPE


|toplab3|toplab3_man:U3|CSL:U4
clock => current[0]~reg0.CLK
clock => current[1]~reg0.CLK
clock => current[2]~reg0.CLK
clock => current[3]~reg0.CLK
clock => current[4]~reg0.CLK
clock => current[5]~reg0.CLK
clock => current[6]~reg0.CLK
clock => current[7]~reg0.CLK
clock => current[8]~reg0.CLK
clock => current[9]~reg0.CLK
reset => current[0]~reg0.ACLR
reset => current[1]~reg0.ACLR
reset => current[2]~reg0.ACLR
reset => current[3]~reg0.ACLR
reset => current[4]~reg0.ACLR
reset => current[5]~reg0.ACLR
reset => current[6]~reg0.ACLR
reset => current[7]~reg0.ACLR
reset => current[8]~reg0.ACLR
reset => current[9]~reg0.ACLR
next[0] => current[0]~reg0.DATAIN
next[1] => current[1]~reg0.DATAIN
next[2] => current[2]~reg0.DATAIN
next[3] => current[3]~reg0.DATAIN
next[4] => current[4]~reg0.DATAIN
next[5] => current[5]~reg0.DATAIN
next[6] => current[6]~reg0.DATAIN
next[7] => current[7]~reg0.DATAIN
next[8] => current[8]~reg0.DATAIN
next[9] => current[9]~reg0.DATAIN
current[0] <= current[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
current[1] <= current[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
current[2] <= current[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
current[3] <= current[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
current[4] <= current[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
current[5] <= current[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
current[6] <= current[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
current[7] <= current[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
current[8] <= current[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
current[9] <= current[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|toplab3|toplab3_man:U3|print7seg:U9
num[0] => Decoder0.IN3
num[1] => Decoder0.IN2
num[2] => Decoder0.IN1
num[3] => Decoder0.IN0
HEX[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
HEX[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
HEX[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
HEX[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
HEX[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
HEX[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
HEX[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
HEX[7] <= <VCC>


|toplab3|toplab3_man:U3|print7seg:U5
num[0] => Decoder0.IN3
num[1] => Decoder0.IN2
num[2] => Decoder0.IN1
num[3] => Decoder0.IN0
HEX[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
HEX[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
HEX[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
HEX[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
HEX[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
HEX[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
HEX[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
HEX[7] <= <VCC>


|toplab3|toplab3_man:U3|print7seg:U6
num[0] => Decoder0.IN3
num[1] => Decoder0.IN2
num[2] => Decoder0.IN1
num[3] => Decoder0.IN0
HEX[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
HEX[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
HEX[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
HEX[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
HEX[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
HEX[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
HEX[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
HEX[7] <= <VCC>


|toplab3|toplab3_man:U3|print7seg:U7
num[0] => Decoder0.IN3
num[1] => Decoder0.IN2
num[2] => Decoder0.IN1
num[3] => Decoder0.IN0
HEX[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
HEX[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
HEX[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
HEX[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
HEX[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
HEX[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
HEX[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
HEX[7] <= <VCC>


|toplab3|toplab3_man:U3|print7seg:U8
num[0] => Decoder0.IN3
num[1] => Decoder0.IN2
num[2] => Decoder0.IN1
num[3] => Decoder0.IN0
HEX[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
HEX[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
HEX[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
HEX[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
HEX[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
HEX[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
HEX[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
HEX[7] <= <VCC>


